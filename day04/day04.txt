把二进制从右向左每三个数位分成一组,每组
   用一个0到7之间的数字替换.这个替换结果
   叫做数字的八进制表示方式

0110 1010     01 101 010     152(八进制)

可以直接在程序中使用八进制方式表示数字,
    这个时候必须以数字0作为开头
可以采用%o作为占位符把数字的八进制表示
    方式显示在屏幕上

把二进制从右向左每四个数位分成一组,每组
    用一个字符替换得到的结果叫十六进制
    (用a到f这六个英文字母替换10到15之间
     的数字)

1100 1011        cb(十六进制)

可以在程序中使用十六进制方式表示数字,
    这个时候必须用0x做开头
可以采用%x或%X做占位符把数字的十六进制
     显示在屏幕上
显示结果中不包含0x开头
用%x做占位符的时候显示结果里所有字符都是
    小写的
用%X做占位符的时候显示结果里所有字符都是
    大写的

操作符用来描述对数字的处理规则
根据操作符所需要配合的数字个数把
   操作符分成单目操作符,双目操作符
    和三目操作符

C语言里用+,-,*和/代表加减乘除四则
    操作符
如果参与除法计算的两个数字都是整数则
    计算结果只保留整数部分

C语言里用%表示取余操作

赋值操作符用=表示
它可以把一个数字记录到一个存储区里
赋值语句可以当作数字使用,这个数字就是
    赋值完成后左边存储区里的数字
可以在一条语句中使用多个赋值操作符,这个
    时候优先计算右边的操作符

绝大多数双目操作符可以和赋值操作符合并
    形成复合赋值操作符,例如+=,/=等
复合赋值操作符要求左边是一个存储区,右边
    是一个能当数字使用的内容
复合赋值操作符可以把双目操作符的计算结果
    记录到左边的存储区里
复合赋值操作符的优先级和赋值操作符的优先级
    一样低,通常在一条语句里的最后才计算

自増操作符(++)和自减操作符(--)都是单目操作符
这两个操作符必须和存储区配合使用,它们
    可以把存储区的内容加一或者减一
每个操作符有两种使用方法,一种是前操作(操作符
    写在存储区前面),另外一种是后操作(操作符
    写在存储区后面)
用这两个操作符编写的表达式本身可以当作
    数字使用,前操作当数字使用时是修改后
    的数字,后操作当数字使用时是修改前的数字
不要在一条语句里对同一个变量多次进行
    自増或自减操作

逻辑操作符用来编写逻辑表达式
逻辑表达式的计算结果只能是布尔值

!是一个单目逻辑操作符,它表示对一个布尔值
    求反(真变成假,假变成真)
这个操作符使用的时候要写在一个布尔值的
    前面

双目逻辑操作符包括等于(==),不等于(!=),
    大于(>),大于等于(>=),小于(<)和
    小于等于(<=)

如果一个逻辑表达式里最多包含一个双目逻辑
    操作符,则它的计算结果在数学里和计算机
    里是一样的
我们把这种表达式叫简单逻辑表达式

C语言里的复杂逻辑表达式必须由多个简单
   逻辑表达式合并构成

与(&&)和或(||)是两个双目逻辑操作符,它们
    都可以把两个逻辑表达式合并成一个

如果两个逻辑表达式中有一个是真则用或(||)
    合并后结果就是真
如果两个逻辑表达式里有一个是假则用与(&&)
    合并后结果就是假

与(&&)和或(||)都具有短路特征(如果前一个逻辑
    表达式可以决定整个逻辑表达式的结果就忽略
    后一个逻辑表达式)

位操作符可以直接操作二进制数位

~是一个单目位操作符
它可以根据一个数字计算出另外一个数字,这
    两个数字所有二进制数位的内容都相反
它代表的操作叫按位求反
这个操作符应该写在一个数字前面

双目位操作符包括按位与(&),按位或(|)和
    按位异或(^)
它们可以把两个数字对应数位上的内容
    进行计算

按位与(&)把对应数位的内容做与计算
只要两个数位中有一个的内容是0则与计算
   的结果就是0
    3         0000 0011
&   5         0000 0101
              0000 0001

按位或(|)把对应数位的内容做或计算
只要两个数位中有一个的内容是1则或计算
    的结果就是1

    3        0000 0011
|   5        0000 0101
             0000 0111

按位异或(^)可以把对应数位的内容做异或计算
如果两个数位的内容一样则异或计算结果是0,
    如果不一样则结果是1

    3        0000 0011
^   5        0000 0101
             0000 0110

移位操作可以把一个数字里的所有二进制数位
    内容统一向左或向右移动n个位置
>>表示向右移位操作
<<表示向左移位操作
它们都是双目位操作符
操作符左边的数字是将要进行移位操作的数字
操作符右边的数字是将要移动的位数
移位操作相当于把数字中每个数位的内容
    换一个数位放

左移时右边空出来的数位里一定填充0
有符号类型数字右移时左边空出来的位置上
    填充的都是符号位的内容
无符号类型数字右移时左边空出来的位置上
    一定填充0

一般情况下向左移动n位相当于乘以2的n次方,
   向右移动n位相当于除以2的n次方

位操作符不会修改现有存储区的内容

&也可以作为单目操作符使用,这个操作符
    可以根据一个变量计算出它代表存储区
    的地址
这个操作符使用的时候应该写在一个存储区的
   前面
可以使用%p做占位符把得到的地址数据显示
   在终端窗口里
在我们的计算机里所有地址数据都由32个二进制
   数位构成

*也可以作为单目操作符使用,它可以根据一个
   地址找到地址对应的存储区
这个操作符应该写在一个地址数据前面

三目操作符可以从两种计算规则里选择一个
    采用
三目操作符格式如下
布尔值 ? 公式一 : 公式二
如果布尔值为真就采用公式一进行计算,否则
    采用公式二进行计算
三目表达式里不要把赋值操作符写在?后面

预习:
    1.类型转换
    2.分支(if分支和switch...case分支)
    3.for循环







