宏也可以用来给一个计算公式起名字
计算公式里包含未知数，宏的参数用来代表这些未知数

带参数的宏是采用二次替换的方式进行处理宏的参数不一定代表数字
    所以宏的参数没有类型名称
    如果宏有多个参数就需要在相邻参数名称之间用逗号分开

宏不能使用自己的存储区和函数进行数据传递
宏没有形式参数也没有用来记录返回值的存储区

能当作数字使用的宏必须写成表达式
    因为宏没有用来记录返回值的存储区

宏的参数直接代表了函数的存储区
    对宏参数内容的修改就是函数存储区内容的修改

宏没有用来记录返回值的存储区
    所以不能保证优先计算宏里面的操作符
能当作数字使用的宏必须写在一对小括号里面

宏没有形式参数，所以不能保证保证优先计算参数里面的操作符
宏的所有能当作数字使用的参数也应该写在小括号里

不要把自赠或自减的结果作为宏的参数使用

编写宏的时候可以使用一些特殊的符号
    这些符号叫做宏操作符

#是一个宏操作符，它可以把宏的参数转换成字符串字面值
##也是一个宏操作符，它可以把一个代表标识符的参数和
    其他内容连接形成新的标识符


条件编译可以在编译的时候从几组语句中选择一组编译而忽略其他组
#ifdef/#ifndef...#else...#endif
以上结构可以根据一个宏名称是否被定义过从两组语句中选择一组编译
这个结构最开始的预处理指令需要从两个里面选择一个
    不论选择哪个后面都需要跟着一个宏名称
如果选择#ifdef就表示他后面的宏名称被定义过的时候编译前一组语句
    否则编译后一组语句
如果选择#ifndef刚好和#ifdef相反

#if...#elif(任意多次)...#else...#endif
以上结构也可以实现条件编译，它可以根据任意逻辑表达式
    从多组语句中选择一组语句


多文件编程的时候每个文件可以包含多个函数
    一个函数只能属于一个文件
多文件编程基本步骤:
1.把所有函数分散在多个不同的源文件里
    (主函数通常单独占一个文件)
2.为每个源文件编写配对的以.h作扩展名的头文件
    (主函数所在的文件不需要配对头文件)
    所有不分配内存的内容都可以在写头文件里
    头文件里至少要包含配对源文件里所有函数的声明
3.在每个源文件里使用#include预处理指令包含必要的头文件
    (1.配对头文件是必要头文件
     2.如果源文件里使用了头文件里声明的函数则这个头文件也是必要头文件)

在gcc命令后列出所有源文件名称就可以编译多个文件组成的程序

可以把多文件程序的编译过程记录到Makefile文件里
    然后使用make工具根据Makefile文件内容进行编译程序

头文件内容应该包含在预处理指令
    这样可以避免头文件内容被多次编译
第一个预处理指令必须是#ifndef
头文件里使用的宏名称应该根据文件路径变化得到


如果想从一个文件里使用另外一个文件里声明的全局变量就
    需要使用extern关键字再次声明那个变量

使用extern关键字声明变量的语句不会分配内存
    所以通常放在头文件里
不可以跨文件使用静态全局变量

    预习:
        1.结构体
