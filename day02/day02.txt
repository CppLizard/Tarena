C语言中大部分内容应该记录在以.c作为
    扩展名的文件里，这种文件叫做C语言
    的源文件
C语言中一少部分内容需要记录在以.h作为
    扩展名的文件里，这种文件叫做C语言
    的头文件

C语言程序中可以直接包含数字和加减乘除
    符号(乘法用*表示，除法用/表示)

每个计算步骤最后都必须用;结束，用;结束
   的一个计算步骤叫做一条语句

C语言程序中绝大多数语句应该写在大括号里

C语言中大括号可以用来表示函数（目前可以
    把函数当作一组语句看待）
C语言程序中每个函数都必须有名字，不同函数
    的名字必须不同

C语言程序中必须包含叫做main的函数，它叫做
    主函数
程序从主函数里的第一条语句开始执行，当
    主函数里的最后一条语句结束后整个
    程序结束

C语言中允许函数在完成所有工作之后用一个
    数字表示它的工作结果，这个数字叫做
    函数的返回值
主函数应该有返回值，如果返回值是0就表示
    程序希望计算机认为它正常结束，如果
    不是0就表示程序希望计算机认为它
    出问题了

C语言里预先保留了几十个英文单词，它们
    叫做C语言的关键字
每个关键字都有专门的用途，不能随便使用
所有关键字都是由小写字母构成的

return就是一个关键字，它有两个用途
主要用途是结束函数的执行（任何时候一定起到
   这个作用）
辅助用途是用来指定返回值的数字

计算机里根据不同数字在某个方面的区别把
    数字分成几组，每组叫做一个数据类型
每个数据类型都有自己的名字
整数类型是一种数据类型，它的名字是int
整数类型里包含几乎所有不带小数点的数字

程序中所有数字必须有类型
程序中不带小数点的数字默认都是整数类型的

如果一个函数有返回值就必须把返回值的类型
    名称写在函数名称前

C语言编码规范
1.一行里最多包含一条语句
2.同级别的语句最左边一列应该上下对齐
3.在合适的地方使用空格和空行

C语言程序中通常包含预处理指令
预处理指令以#做开头不是以;做结尾
标准C阶段遇到的预处理指令都可以把文件
    里的内容替换成其他内容
#include是一个预处理指令,它可以把一个
    头文件的内容包含到当前文件中
在这个预处理指令中需要使用相对路径
    表示被包含头文件的位置
如果把路径包含在<>里就表示以系统中预先
    规定好的一组目录依次作为起点查找
    头文件
如果把路径包含在""里就表示首先以当前文件
    所在目录作为起点查找，然后再以系统
    中规定好的一组目录依次作为起点查找

C语言程序中可以加入文字性的说明信息，
    这些信息必须加入到注释区域里
计算机会直接忽略注释区域里的内容
单行注释以//做开头一直到行尾
多行注释以/*做开头以*/做结尾

C语言中大量使用名称区分不同内容
这些名称叫做标识符
标识符最好用英文单词编写
标识符编写规则
1.第一个字母应该是英文字母或下划线
2.后面的字母可以是英文字母，下划线或
    阿拉伯数字
3.大小写不同的标识符是不同的标识符
    (大小写敏感)
4.关键字不能作为标识符使用
5.标识符的长度没有限制，但是计算机只会
    截取前面一部分使用
6.标识符应该采用驼峰方式或下划线方式书写

编译器可以把编写好的程序翻译成计算机能
    认识的格式
gcc是Linux系统中C语言的编译器
MinGW是Windows里的gcc

Linux系统中C语言程序开发基本流程
1.使用vi编写源文件和头文件
2.使用gcc把源文件翻译成计算机认识的格式(编译)
3.使用./a.out作为命令执行得到的结果文件

gcc编译器工作步骤
1.处理所有预处理指令
2.把第一步的结果翻译成计算机认识的格式（编译）
3.把上一步的结果合并成最终可以执行的
    文件(链接)

gcc选项介绍
-E        只处理预处理指令
-c        只处理预处理指令和编译
          处理结果是以.o作为扩展名的文件
          这种文件叫做目标文件
-o        决定得到的结果文件名称
-std=c89/-std=c99
          决定采用什么版本的规范进行编译
          默认采用c89规范

C语言里提供了一组工具，它们叫做标准函数
每个标准函数负责解决一个常见问题
每个标准函数有自己的名字，不同标准
   函数的名字不同
可以在程序中编写函数调用语句使用标准函数

printf标准函数可以把程序中的数字显示在
    屏幕上
为了使用这个标准函数需要包含stdio.h头文件
可以利用占位符把双引号里面的数字转移到
   双引号后面
%d是一个占位符，它应该和整数类型数字配合使用
双引号后面的数字可以是一个复杂计算过程的
    结果
可以在双引号里使用多个占位符，这个时候
    应该在双引号后面提供多个数字，数字
    的个数和占位符的个数一样
打印之前计算机会用双引号后面的数字依次
    替换双引号里面的占位符，替换完再打印

程序中的数字必须记录在内存里
内存由大量字节构成，每个字节可以单独记录
    一个数字
每个字节有一个编号，不同字节的编号不同
这个编号叫做字节的地址
所有字节的地址从0开始向上递增

可以把几个相邻字节合并成一个整体用来
    记录一个数字

可以把内存里用来记录了一个数字的所有字节
    称为一个存储区
一个存储区只能记录一种类型的数字
存储区的地址是它所包含的字节中最前面字节
    的地址

程序中可以使用变量代表存储区，对变量的操作
   就是对它所代表的存储区的操作
所有变量必须首先声明，然后才能使用
变量声明语句可以用来声明变量
变量声明语句让计算机为变量分配存储区
可以在一条语句中声明多个同类型变量

变量赋值语句可以通过变量向存储区里放数字
赋值语句的核心是赋值操作符(=)
赋值操作符左边的内容必须可以代表存储区，
    这种内容叫左值（变量是最简单的左值）
赋值操作符右边的内容必须可以当作数字
    使用
赋值操作符可以把右边的数字放在左边的
    存储区里

可以在声明变量的时候立刻对它赋值，这
    叫做变量初始化
C语言里所有变量都应该初始化

可以在程序中把变量当作数字使用，这个
    数字就是变量代表存储区里的数字。
变量既可以代表存储区也可以代表存储区
    里的数字，由环境决定

存储区的地址也可以代表存储区
可以在变量名称前使用&符号计算出变量
    代表存储区的地址
可以使用%p作为占位符把地址数据显示在屏幕上

变量可以用来代表一个固定数字

变量可以用来依次代表一组数字
如果一组数字任何时候只会使用其中一个，
    每个数字的使用方法类似。可以用一个
    变量分别代表他们





